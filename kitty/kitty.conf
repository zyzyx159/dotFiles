# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

 font_family      CaskaydiaCove NF Regular
 bold_font        CaskaydiaCove NF Bold
 italic_font      CaskaydiaCove NF Italic
 bold_italic_font CaskaydiaCove NF Bold Italic

 #: }}}

#: Text cursor customization {{{

 cursor_shape block
#: The cursor shape can be one of block, beam, underline.

 cursor_shape_unfocused hollow
#: Defines the text cursor shape when the OS window is not focused.

 cursor_beam_thickness 1.5
#: The thickness of the beam cursor (in pts).

 cursor_underline_thickness 2.0
#: The thickness of the underline cursor (in pts).

 cursor_blink_interval -1
#: The interval to blink the cursor (in seconds). Set to zero to
#: disable blinking. Negative values mean use system default.

 cursor_trail 1
#: This is an animation that shows a "trail" following the
#: movement of the text cursor.

 cursor_trail_decay 0.1 0.4
#: Controls the decay times for the cursor trail effect when the
#: cursor_trail is enabled.

 cursor_trail_start_threshold 2
#: Set the distance threshold for starting the cursor trail.
#: }}}

#: Scrollback {{{

 scrollback_lines 2000
#: Number of lines of history to keep in memory for scrolling back.

 scrollbar scrolled
#: Control when the scrollbar is displayed.

 scrollbar_interactive no
#: If disabled, the scrollbar will not be controllable via the emouse
#: and all mouse events will pass through the scrollbar.

 scrollbar_jump_on_click yes

#: When enabled clicking in the scrollbar track will cause the scroll
#: position to jump to the clicked location.

 wheel_scroll_multiplier 5.0

#: Multiplier for the number of lines scrolled by the mouse wheel.

#: }}}

#: Mouse {{{

 mouse_hide_wait 3.0
#: Hide mouse cursor after the specified number of seconds of the
#: mouse not being used.
# url_color #0087bd
 url_style straight
#: The color and style for highlighting URLs on mouse-over.

 open_url_with default
#: The program to open clicked URLs.

 url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.

 detect_urls yes
#: Detect URLs under the mouse.

 url_excluded_characters
#: Additional characters to be disallowed from URLs, when detecting
#: URLs under the mouse cursor.

 show_hyperlink_targets yes
#: When the mouse hovers over a terminal hyperlink, show the actual
#: URL that will be activated when the hyperlink is clicked.

 underline_hyperlinks hover
#: Control how hyperlinks are underlined.

 copy_on_select no
#: Copy to clipboard or a private buffer on select.

 strip_trailing_spaces always
#: Remove spaces at the end of lines when copying to clipboard.

 select_by_word_characters @-./_~?&=%+#
#: Characters considered part of a word when double clicking.

 select_by_word_characters_forward
#: Characters considered part of a word when extending the selection
#: forward on double clicking.

 click_interval -1.0
#: The interval between successive clicks to detect double/triple
#: clicks (in seconds). Negative numbers will use the system default
#: instead, if available, or fallback to 0.5.

 focus_follows_mouse yes
#: Set the active window to the window under the mouse when moving the
#: mouse around. On macOS, this will also cause the OS Window under
#: the mouse to be focused automatically when the mouse enters it.

#: Mouse actions {{{

#: Mouse buttons can be mapped to perform arbitrary actions. The
#: syntax is:

#: .. code-block:: none

#:     mouse_map button-name event-type modes action

#: Where button-name is one of left, middle, right, b1 ... b8 with
#: added keyboard modifiers. For example: ctrl+shift+left refers to
#: holding the Ctrl+Shift keys while clicking with the left mouse
#: button. The value b1 ... b8 can be used to refer to up to eight
#: buttons on a mouse.

#: event-type is one of press, release, doublepress, triplepress,
#: click, doubleclick. modes indicates whether the action is performed
#: when the mouse is grabbed by the program running in the terminal,
#: or not. The values are grabbed or ungrabbed or a comma separated
#: combination of them. grabbed refers to when the program running in
#: the terminal has requested mouse events. Note that the click and
#: double click events have a delay of click_interval to disambiguate
#: from double and triple presses.

#: You can run kitty with the kitty --debug-input command line option
#: to see mouse events. See the builtin actions below to get a sense
#: of what is possible.

#: If you want to unmap a button, map it to nothing. For example, to
#: disable opening of URLs with a plain click::

#:     mouse_map left click ungrabbed

#: See all the mappable actions including mouse actions here
#: <https://sw.kovidgoyal.net/kitty/actions/>.

#: .. note::
#:     Once a selection is started, releasing the button that started it will
#:     automatically end it and no release event will be dispatched.

# clear_all_mouse_actions no

#: Remove all mouse action definitions up to this point. Useful, for
#: instance, to remove the default mouse actions.

#: Click the link under the mouse or move the cursor

# mouse_map left click ungrabbed mouse_handle_click selection link prompt

#::  First check for a selection and if one exists do nothing. Then
#::  check for a link under the mouse cursor and if one exists, click
#::  it. Finally check if the click happened at the current shell
#::  prompt and if so, move the cursor to the click location. Note
#::  that this requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: Click the link under the mouse or move the cursor even when grabbed

# mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt

#::  Same as above, except that the action is performed even when the
#::  mouse is grabbed by the program running in the terminal.

#: Click the link under the mouse cursor

# mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link

#::  Variant with Ctrl+Shift is present because the simple click based
#::  version has an unavoidable delay of click_interval, to
#::  disambiguate clicks from double clicks.

#: Discard press event for link click

# mouse_map ctrl+shift+left press grabbed discard_event

#::  Prevent this press event from being sent to the program that has
#::  grabbed the mouse, as the corresponding release event is used to
#::  open a URL.

#: Paste from the primary selection

# mouse_map middle release ungrabbed paste_from_selection

#: Start selecting text

# mouse_map left press ungrabbed mouse_selection normal

#: Start selecting text in a rectangle

# mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle

#: Select a word

# mouse_map left doublepress ungrabbed mouse_selection word

#: Select a line

# mouse_map left triplepress ungrabbed mouse_selection line

#: Select line from point

# mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line. If you
#::  would like to select the word at the point and then extend to the
#::  rest of the line, change `line_from_point` to
#::  `word_and_line_from_point`.

#: Extend the current selection

# mouse_map right press ungrabbed mouse_selection extend

#::  If you want only the end of the selection to be moved instead of
#::  the nearest boundary, use move-end instead of extend.

#: Paste from the primary selection even when grabbed

# mouse_map shift+middle release ungrabbed,grabbed paste_selection
# mouse_map shift+middle press grabbed discard_event

#: Start selecting text even when grabbed

# mouse_map shift+left press ungrabbed,grabbed mouse_selection normal

#: Start selecting text in a rectangle even when grabbed

# mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle

#: Select a word even when grabbed

# mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word

#: Select a line even when grabbed

# mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line

#: Select line from point even when grabbed

# mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line even when
#::  grabbed. If you would like to select the word at the point and
#::  then extend to the rest of the line, change `line_from_point` to
#::  `word_and_line_from_point`.

#: Extend the current selection even when grabbed

# mouse_map shift+right press ungrabbed,grabbed mouse_selection extend

#: Show clicked command output in pager

# mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output

#::  Requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: }}}

#: }}}

#: Window layout {{{

 remember_window_size  yes
#: The OS Window size will be remembered so that new instances of kitty
#: will have the same size as the previous instance.

 remember_window_position yes
#: If enabled, the OS Window position will be remembered so that new
#: instances of kitty will have the same position as the previous
#: instance.

#: }}}

#: Tab bar {{{

 tab_bar_edge top
#: The edge to show the tab bar on, top or bottom.

 tab_bar_style fade
#: fade - Each tab's edges fade into the background color. (See also tab_fade)

 tab_bar_align left
#: The horizontal alignment of the tab bar to the left.

 tab_bar_min_tabs 2
#: The minimum number of tabs that must exist before the tab bar is shown.

 tab_switch_strategy previous
#: The algorithm to use when switching to a tab when the current tab is closed.

 tab_fade 0.25 0.5 0.75 1
#: Control how each tab fades into the background when using fade for
#: the tab_bar_style.

 tab_activity_symbol none
#: Some text or a Unicode symbol to show on the tab if a window in the
#: tab that does not have focus has some activity.

#: }}}

#: Advanced {{{

 shell .
#: The shell program to execute. The default value of . means to use
#: the value of of the SHELL environment variable or if unset,
#: whatever shell is set as the default shell for the current user.

 editor .
#: The terminal based text editor (such as vim or nano) to use when
#: editing the kitty config file or similar tasks.

 allow_remote_control no
#: Allow other programs to control kitty.

 listen_on none
#: Listen to the specified socket for remote control connections.

 update_check_interval 24
#: The interval to periodically check if an update to kitty is
#: available (in hours).

#: }}}

#: OS specific tweaks {{{

 linux_display_server auto
#: Choose between Wayland and X11 backends.

#: }}}

#: Keyboard shortcuts {{{

 kitty_mod ctrl+shift
#: Special modifier key alias for default shortcuts.

#: }}}

#: Clipboard {{{

 map ctrl+c copy_or_interrupt
#: Copy if something is selected, send and inturpt if not.

 map ctrl+v paste_from_clipboard
 #: Paste with control + V

#: }}}

#: Scrolling {{{

 map ctrl+k     scroll_line_up
 map ctrl+down  scroll_line_down
#: Scoll up and down

 map ctrl+page_up   scroll_page_up
 map ctrl+page_down scroll_page_down
#: Scroll page up and down


 map kitty_mod+home scroll_home
 map kitty_mod+end  scroll_end
#: Scroll to top or bottom

#: }}}

#: Window management {{{

 map kitty_mod+c new_window
#: New window

 map kitty_mod+w close_window
#: Close window

 map kitty_mod+] next_window
#: Next window

 map kitty_mod+[ previous_window
#: Previous window

#: }}}

#: Tab management {{{

#: Next tab
 map shift+cmd+]     next_tab

#: Previous tab
 map shift+cmd+[    previous_tab

#: New tab
 map ctrl+b>c new_tab

#: Close tab
 map ctrl+b>q close_tab

#: Set tab title
 map ctrl+b>, set_tab_title

#: Numbered tab hopping
 map ctrl+b>1 gototab 1
 map ctrl+b>2 gototab 2
 map ctrl+b>3 gototab 3
 map ctrl+b>4 gototab 4
 map ctrl+b>5 gototab 5
 map ctrl+b>7 gototab 6
 map ctrl+b>7 gototab 7
 map ctrl+b>8 gototab 8
 map ctrl+b>9 gototab 9
 map ctrl+b>0 gototab 10

#: }}}


# BEGIN_KITTY_THEME
# Catppuccin-Mocha
include current-theme.conf
# END_KITTY_THEME